<?php
$echo_message = "";
// Retrieves shoe data
$shoe_id = $_POST['shoe_id']; // Retrieves user ID
$shoe_category = filter_input(INPUT_POST, 'shoe_category', FILTER_VALIDATE_INT);
$shoe_code = filter_input(INPUT_POST, 'shoe_code');
$shoe_name = filter_input(INPUT_POST, 'shoe_name');
$description_text_area = filter_input(INPUT_POST, 'description_text_area');

$shoe_price = filter_input(INPUT_POST, 'shoe_price', FILTER_VALIDATE_FLOAT);

/*
Checks if all input fields are not empty
*/
if($shoe_code == null || $shoe_name == null || $description_text_area == false
                      || $shoe_category == null || $shoe_code == false 
                      || $shoe_price == null || $shoe_price == false
                      || $shoe_id == null || $shoe_id == false){
    $echo_message .= '<h1>Invalid Product Data. Check All Fields & Try Again.</h1>';
    include('added_shoes_table.php'); // Directs page back to itself
    echo $echo_message; // Displays Error Message
    error_reporting(0); // Hides Errors Generated by user input
}else{
  /*
    require('database.php');
  */
  $local_dsn = 'mysql:host=localhost;dbname=my_guitar_shop1';
  $local_username = "mgs_user";
  $local_password = 'pa55word';

  $njit_dsn = 'mysql:host=sql1.njit.edu;port=3306;dbname=nam';
        $njit_username = 'nam';
        $njit_password = '5CP_61o-12';

  // TODO create variables for NJIT Server
  $dsn = $njit_dsn;
  $username = $njit_username;
  $password = $njit_password;

  try{
    $db = new PDO($dsn, $username, $password);
  }catch(PDOException $exception){
    $error_message = $exception->getMessage();
    include("database_error.php");
    exit();
  }
} 
// Add the product to the database
$shoe_query_check1 = "SELECT * 
                     FROM shoes
                     WHERE shoeID = :shoe_id"; // Retrieves SQL Database row via shoe_id value into variable :shoe_id

/*exectues SQL Query statement with variable shoe_id 
  containing the value shoe_id from SQL Database*/

  
$statement1 = $db->prepare($shoe_query_check1); // Loads SQL Query Statement
$statement1->execute(['shoe_id' => $shoe_id]); 

/*
If statement checks if SQL Database Row Exists
*/
if($statement1->rowCount() != 0){
    $echo_message .= "<h1>Invalid Input. Entry Already Exists. Please Try Again<h1><br>";
    $statement1->closeCursor();
    include('added_shoes_table.php'); // Redirects back to this php page file
    echo $echo_message; 
    error_reporting(0); // Hides Errors generated by user
}


/*
SQL Query Begins statement that inserts user entered data into SQL Shoe database
*/
$shoe_query = 'INSERT INTO shoes
                 (shoeID, shoeCategoryID, shoeCode, shoeName, description, price, dateAdded) 
               VALUES 
                 (:shoe_id, :shoe_category, :shoe_code, :shoe_name, :description_text_area, :shoe_price, NOW())';
$statement1 = $db->prepare($shoe_query); // Loads SQL Query which inserts values into a SQL Shoe database row
/*
Bind value statemments below chain the retrieved SQL data values from a particular row into variable statement1
*/

$statement1->bindValue(':shoe_id', $shoe_id);
$statement1->bindValue(':shoe_category', $shoe_category);
$statement1->bindValue(':shoe_code', $shoe_code);
$statement1->bindValue(':shoe_name', $shoe_name);
$statement1->bindValue(':description_text_area', $description_text_area);
$statement1->bindValue(':shoe_price', $shoe_price);
try{
  $statement1->execute();
  $statement1->closeCursor();

  $echo_message .= "<h1>Entry: $shoe_name, Code: $shoe_code Added<h1><br>"; 
  include('added_shoes_table.php');
  echo $echo_message; // Message displays that entry was successfully added
  error_reporting(0); // Hides errors created by user input
}catch(Exception $e){
  $echo_message .= "<h1>Invalid Input. Entry Already Exists. Please Try Again<h1><br>";
  $statement1->closeCursor();
  include('added_shoes_table.php'); // Redirects back to this php page file
  echo $echo_message; 
  error_reporting(0);
}
?>